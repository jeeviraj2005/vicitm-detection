{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":9426707,"sourceType":"datasetVersion","datasetId":5584155}],"dockerImageVersionId":31090,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"!pip install ultralytics --quiet\nfrom ultralytics import YOLO\nimport os\nimport cv2\nimport matplotlib.pyplot as plt\nimport glob","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T18:07:00.071903Z","iopub.execute_input":"2025-08-22T18:07:00.072071Z","iopub.status.idle":"2025-08-22T18:08:27.677726Z","shell.execute_reply.started":"2025-08-22T18:07:00.072054Z","shell.execute_reply":"2025-08-22T18:08:27.676905Z"}},"outputs":[{"name":"stdout","text":"\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.1/1.1 MB\u001b[0m \u001b[31m17.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0ma \u001b[36m0:00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m86.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m71.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m31.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m8.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m17.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m13.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m8.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m82.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hCreating new Ultralytics Settings v0.0.6 file ✅ \nView Ultralytics Settings with 'yolo settings' or at '/root/.config/Ultralytics/settings.json'\nUpdate Settings with 'yolo settings key=value', i.e. 'yolo settings runs_dir=path/to/dir'. For help see https://docs.ultralytics.com/quickstart/#ultralytics-settings.\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"!nvidia-smi\n!pip -q install ultralytics==8.3.50 split-folders==0.5.1 pyYAML==6.0.2\n\nfrom pathlib import Path\nimport os, shutil, yaml, glob, random\nrandom.seed(42)\n\nROOT = Path(\"/kaggle/working\")\nRAW  = ROOT / \"dataset_raw\"      # raw data goes here\nPROC = ROOT / \"dataset_yolo\"     # preprocessed dataset\nPROC.mkdir(parents=True, exist_ok=True)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T18:14:06.528748Z","iopub.execute_input":"2025-08-22T18:14:06.529084Z","iopub.status.idle":"2025-08-22T18:14:11.200051Z","shell.execute_reply.started":"2025-08-22T18:14:06.529051Z","shell.execute_reply":"2025-08-22T18:14:11.199207Z"}},"outputs":[{"name":"stdout","text":"Fri Aug 22 18:14:06 2025       \n+-----------------------------------------------------------------------------------------+\n| NVIDIA-SMI 560.35.03              Driver Version: 560.35.03      CUDA Version: 12.6     |\n|-----------------------------------------+------------------------+----------------------+\n| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n|                                         |                        |               MIG M. |\n|=========================================+========================+======================|\n|   0  Tesla T4                       Off |   00000000:00:04.0 Off |                    0 |\n| N/A   40C    P8              9W /   70W |       1MiB /  15360MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n|   1  Tesla T4                       Off |   00000000:00:05.0 Off |                    0 |\n| N/A   44C    P8             12W /   70W |       1MiB /  15360MiB |      0%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n                                                                                         \n+-----------------------------------------------------------------------------------------+\n| Processes:                                                                              |\n|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n|        ID   ID                                                               Usage      |\n|=========================================================================================|\n|  No running processes found                                                             |\n+-----------------------------------------------------------------------------------------+\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m899.0/899.0 kB\u001b[0m \u001b[31m15.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0ma \u001b[36m0:00:01\u001b[0m\n\u001b[?25h","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"# Example: unzip uploaded zip\n!unzip -q -o /kaggle/input/your-dataset.zip -d {RAW}\nprint(\"Raw data at:\", RAW)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T18:15:03.826751Z","iopub.execute_input":"2025-08-22T18:15:03.827477Z","iopub.status.idle":"2025-08-22T18:15:03.963313Z","shell.execute_reply.started":"2025-08-22T18:15:03.827428Z","shell.execute_reply":"2025-08-22T18:15:03.962516Z"}},"outputs":[{"name":"stdout","text":"unzip:  cannot find or open /kaggle/input/your-dataset.zip, /kaggle/input/your-dataset.zip.zip or /kaggle/input/your-dataset.zip.ZIP.\nRaw data at: /kaggle/working/dataset_raw\n","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"from pathlib import Path\nPROC = Path(\"/kaggle/working/dataset_yolo\")  # point directly to your dataset\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T18:16:46.031778Z","iopub.execute_input":"2025-08-22T18:16:46.032128Z","iopub.status.idle":"2025-08-22T18:16:46.036228Z","shell.execute_reply.started":"2025-08-22T18:16:46.032092Z","shell.execute_reply":"2025-08-22T18:16:46.035498Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"from pathlib import Path\n\n# Your dataset is already here:\nPROC = Path(\"/kaggle/working/dataset_yolo\")\n\n# Check structure\nprint(\"Dataset path:\", PROC)\nprint(\"Train images:\", (PROC/\"images/train\").exists())\nprint(\"Val images  :\", (PROC/\"images/val\").exists())\nprint(\"Labels train:\", (PROC/\"labels/train\").exists())\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T18:18:03.161563Z","iopub.execute_input":"2025-08-22T18:18:03.161886Z","iopub.status.idle":"2025-08-22T18:18:03.166890Z","shell.execute_reply.started":"2025-08-22T18:18:03.161864Z","shell.execute_reply":"2025-08-22T18:18:03.166197Z"}},"outputs":[{"name":"stdout","text":"Dataset path: /kaggle/working/dataset_yolo\nTrain images: False\nVal images  : False\nLabels train: False\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"!ls /kaggle/input\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T18:19:40.212021Z","iopub.execute_input":"2025-08-22T18:19:40.212580Z","iopub.status.idle":"2025-08-22T18:19:40.350405Z","shell.execute_reply.started":"2025-08-22T18:19:40.212556Z","shell.execute_reply":"2025-08-22T18:19:40.349429Z"}},"outputs":[{"name":"stdout","text":"c2a-dataset\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"import shutil\n\nshutil.copytree(\"/kaggle/input/c2a-dataset\", \"/kaggle/working/dataset_yolo\", dirs_exist_ok=True)\nprint(\"Dataset copied to /kaggle/working/dataset_yolo\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T18:20:01.596745Z","iopub.execute_input":"2025-08-22T18:20:01.597614Z","iopub.status.idle":"2025-08-22T18:28:25.008029Z","shell.execute_reply.started":"2025-08-22T18:20:01.597577Z","shell.execute_reply":"2025-08-22T18:28:25.007310Z"}},"outputs":[{"name":"stdout","text":"Dataset copied to /kaggle/working/dataset_yolo\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"import os\n\nfor root, dirs, files in os.walk(\"/kaggle/working/dataset_yolo\"):\n    level = root.replace(\"/kaggle/working/dataset_yolo\", \"\").count(os.sep)\n    indent = \" \" * (4 * level)\n    print(f\"{indent}{os.path.basename(root)}/\")\n    subindent = \" \" * (4 * (level + 1))\n    for f in files[:5]:  # show first 5 files in each folder\n        print(f\"{subindent}{f}\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T18:28:48.284226Z","iopub.execute_input":"2025-08-22T18:28:48.284982Z","iopub.status.idle":"2025-08-22T18:28:48.314756Z","shell.execute_reply.started":"2025-08-22T18:28:48.284959Z","shell.execute_reply":"2025-08-22T18:28:48.314131Z"}},"outputs":[{"name":"stdout","text":"dataset_yolo/\n    Coco_annotation_pose/\n        val_annotations_with_pose_information.json\n        train_annotations_with_pose_information.json\n        test_annotations_with_pose_information.json\n    C2A_Dataset/\n        new_dataset3/\n            train/\n                train_annotations.json\n                labels/\n                    collapsed_building_image0426_2.txt\n                    traffic_incident_image0243_2.txt\n                    flood_image0401_2.txt\n                    collapsed_building_image0451_3.txt\n                    fire_image0170_4.txt\n                images/\n                    traffic_incident_image0241_1.png\n                    flood_image0167_2.png\n                    flood_image0016_4.png\n                    traffic_incident_image0360_3.png\n                    flood_image0189_0.png\n            test/\n                test_annotations.json\n                labels/\n                    flood_image0030_4.txt\n                    traffic_incident_image0476_3.txt\n                    collapsed_building_image0024_4.txt\n                    fire_image0424_1.txt\n                    flood_image0037_4.txt\n                images/\n                    fire_image0477_0.png\n                    flood_image0495_1.png\n                    flood_image0106_4.png\n                    fire_image0334_2.png\n                    fire_image0257_1.png\n            val/\n                val_annotations.json\n                labels/\n                    traffic_incident_image0100_0.txt\n                    traffic_incident_image0286_3.txt\n                    collapsed_building_image0196_4.txt\n                    traffic_incident_image0244_1.txt\n                    collapsed_building_image0494_1.txt\n                images/\n                    flood_image0449_4.png\n                    collapsed_building_image0076_3.png\n                    fire_image0158_0.png\n                    collapsed_building_image0127_1.png\n                    collapsed_building_image0433_1.png\n            All labels with Pose information/\n                readme.txt\n                labels/\n                    traffic_incident_image0100_0.txt\n                    collapsed_building_image0426_2.txt\n                    traffic_incident_image0243_2.txt\n                    flood_image0030_4.txt\n                    flood_image0401_2.txt\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"from tqdm import tqdm\nimport cv2, os, glob, shutil\n\n# Define dataset paths\nRAW = \"/kaggle/input/c2a-dataset/C2A_Dataset/new_dataset3\"\nPROC = \"/kaggle/working/c2a_preprocessed\"\n\n# Copy dataset to working dir\nshutil.rmtree(PROC, ignore_errors=True)\nshutil.copytree(RAW, PROC)\n\ndef preprocess_images(image_dir):\n    for img_path in tqdm(glob.glob(f\"{image_dir}/*.jpg\")):\n        try:\n            img = cv2.imread(img_path)\n            if img is None:\n                os.remove(img_path)\n                continue\n            img_resized = cv2.resize(img, (640, 640))\n            cv2.imwrite(img_path, img_resized)\n        except:\n            os.remove(img_path)\n\nfor split in [\"train\", \"val\", \"test\"]:\n    preprocess_images(f\"{PROC}/{split}/images\")\n\nprint(\"✅ Preprocessing complete. Resized to 640x640 and cleaned corrupts.\")\n\n# Zip preprocessed dataset for download\nshutil.make_archive(\"/kaggle/working/c2a_preprocessed\", 'zip', PROC)\nprint(\"📦 Preprocessed dataset saved as /kaggle/working/c2a_preprocessed.zip\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T18:36:11.936371Z","iopub.execute_input":"2025-08-22T18:36:11.937019Z","iopub.status.idle":"2025-08-22T18:41:03.412405Z","shell.execute_reply.started":"2025-08-22T18:36:11.936994Z","shell.execute_reply":"2025-08-22T18:41:03.411510Z"}},"outputs":[{"name":"stderr","text":"0it [00:00, ?it/s]\n0it [00:00, ?it/s]\n0it [00:00, ?it/s]\n","output_type":"stream"},{"name":"stdout","text":"✅ Preprocessing complete. Resized to 640x640 and cleaned corrupts.\n📦 Preprocessed dataset saved as /kaggle/working/c2a_preprocessed.zip\n","output_type":"stream"}],"execution_count":13},{"cell_type":"code","source":"import shutil, os\n\n# Make sure output folder exists\nos.makedirs(\"/kaggle/working/output\", exist_ok=True)\n\n# Copy zip there\nshutil.copy(\"/kaggle/working/c2a_preprocessed.zip\", \"/kaggle/working/output/c2a_preprocessed.zip\")\n\nprint(\"✅ File moved to output folder\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T18:45:38.465938Z","iopub.execute_input":"2025-08-22T18:45:38.466428Z","iopub.status.idle":"2025-08-22T18:45:45.009057Z","shell.execute_reply.started":"2025-08-22T18:45:38.466404Z","shell.execute_reply":"2025-08-22T18:45:45.008400Z"}},"outputs":[{"name":"stdout","text":"✅ File moved to output folder\n","output_type":"stream"}],"execution_count":16},{"cell_type":"code","source":"import yaml\n\ndata_yaml = {\n    'train': f'{PROC}/train/images',\n    'val': f'{PROC}/val/images',\n    'test': f'{PROC}/test/images',\n    'nc': 4,  # number of classes\n    'names': ['standing','sitting','walking','lying']\n}\n\nwith open('/kaggle/working/c2a_data.yaml', 'w') as f:\n    yaml.dump(data_yaml, f, sort_keys=False)\n\nprint(\"✅ data.yaml created at /kaggle/working/c2a_data.yaml\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T18:47:26.246261Z","iopub.execute_input":"2025-08-22T18:47:26.246929Z","iopub.status.idle":"2025-08-22T18:47:26.252854Z","shell.execute_reply.started":"2025-08-22T18:47:26.246905Z","shell.execute_reply":"2025-08-22T18:47:26.252210Z"}},"outputs":[{"name":"stdout","text":"✅ data.yaml created at /kaggle/working/c2a_data.yaml\n","output_type":"stream"}],"execution_count":17},{"cell_type":"code","source":"!pip install -U ultralytics\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T18:48:39.921178Z","iopub.execute_input":"2025-08-22T18:48:39.921887Z","iopub.status.idle":"2025-08-22T18:48:44.205656Z","shell.execute_reply.started":"2025-08-22T18:48:39.921861Z","shell.execute_reply":"2025-08-22T18:48:44.204704Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: ultralytics in /usr/local/lib/python3.11/dist-packages (8.3.50)\nCollecting ultralytics\n  Using cached ultralytics-8.3.184-py3-none-any.whl.metadata (37 kB)\nRequirement already satisfied: numpy>=1.23.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (1.26.4)\nRequirement already satisfied: matplotlib>=3.3.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (3.7.2)\nRequirement already satisfied: opencv-python>=4.6.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (4.11.0.86)\nRequirement already satisfied: pillow>=7.1.2 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (11.2.1)\nRequirement already satisfied: pyyaml>=5.3.1 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (6.0.2)\nRequirement already satisfied: requests>=2.23.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (2.32.4)\nRequirement already satisfied: scipy>=1.4.1 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (1.15.3)\nRequirement already satisfied: torch>=1.8.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (2.6.0+cu124)\nRequirement already satisfied: torchvision>=0.9.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (0.21.0+cu124)\nRequirement already satisfied: tqdm>=4.64.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (4.67.1)\nRequirement already satisfied: psutil in /usr/local/lib/python3.11/dist-packages (from ultralytics) (7.0.0)\nRequirement already satisfied: py-cpuinfo in /usr/local/lib/python3.11/dist-packages (from ultralytics) (9.0.0)\nRequirement already satisfied: pandas>=1.1.4 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (2.2.3)\nRequirement already satisfied: ultralytics-thop>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from ultralytics) (2.0.16)\nRequirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (1.3.2)\nRequirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (0.12.1)\nRequirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (4.58.4)\nRequirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (1.4.8)\nRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (25.0)\nRequirement already satisfied: pyparsing<3.1,>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (3.0.9)\nRequirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib>=3.3.0->ultralytics) (2.9.0.post0)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.0->ultralytics) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.0->ultralytics) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.0->ultralytics) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.0->ultralytics) (2025.2.0)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.0->ultralytics) (2022.2.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.11/dist-packages (from numpy>=1.23.0->ultralytics) (2.4.1)\nRequirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.1.4->ultralytics) (2025.2)\nRequirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.1.4->ultralytics) (2025.2)\nRequirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests>=2.23.0->ultralytics) (3.4.2)\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests>=2.23.0->ultralytics) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests>=2.23.0->ultralytics) (2.5.0)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests>=2.23.0->ultralytics) (2025.6.15)\nRequirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (3.18.0)\nRequirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (4.14.0)\nRequirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (3.5)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (3.1.6)\nRequirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (2025.5.1)\nRequirement already satisfied: nvidia-cuda-nvrtc-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.4.127)\nRequirement already satisfied: nvidia-cuda-runtime-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.4.127)\nRequirement already satisfied: nvidia-cuda-cupti-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.4.127)\nRequirement already satisfied: nvidia-cudnn-cu12==9.1.0.70 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (9.1.0.70)\nRequirement already satisfied: nvidia-cublas-cu12==12.4.5.8 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.4.5.8)\nRequirement already satisfied: nvidia-cufft-cu12==11.2.1.3 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (11.2.1.3)\nRequirement already satisfied: nvidia-curand-cu12==10.3.5.147 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (10.3.5.147)\nRequirement already satisfied: nvidia-cusolver-cu12==11.6.1.9 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (11.6.1.9)\nRequirement already satisfied: nvidia-cusparse-cu12==12.3.1.170 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.3.1.170)\nRequirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (0.6.2)\nRequirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (2.21.5)\nRequirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.4.127)\nRequirement already satisfied: nvidia-nvjitlink-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (12.4.127)\nRequirement already satisfied: triton==3.2.0 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (3.2.0)\nRequirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch>=1.8.0->ultralytics) (1.13.1)\nRequirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch>=1.8.0->ultralytics) (1.3.0)\nRequirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib>=3.3.0->ultralytics) (1.17.0)\nRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch>=1.8.0->ultralytics) (3.0.2)\nRequirement already satisfied: intel-openmp<2026,>=2024 in /usr/local/lib/python3.11/dist-packages (from mkl->numpy>=1.23.0->ultralytics) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.11/dist-packages (from mkl->numpy>=1.23.0->ultralytics) (2022.2.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.11/dist-packages (from tbb==2022.*->mkl->numpy>=1.23.0->ultralytics) (1.4.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.11/dist-packages (from mkl_umath->numpy>=1.23.0->ultralytics) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.11/dist-packages (from intel-openmp<2026,>=2024->mkl->numpy>=1.23.0->ultralytics) (2024.2.0)\nUsing cached ultralytics-8.3.184-py3-none-any.whl (1.1 MB)\nInstalling collected packages: ultralytics\n  Attempting uninstall: ultralytics\n    Found existing installation: ultralytics 8.3.50\n    Uninstalling ultralytics-8.3.50:\n      Successfully uninstalled ultralytics-8.3.50\nSuccessfully installed ultralytics-8.3.184\n","output_type":"stream"}],"execution_count":19},{"cell_type":"code","source":"import shutil, os\n\n# Clean old runs\nshutil.rmtree(\"/kaggle/working/runs\", ignore_errors=True)\nshutil.rmtree(\"/kaggle/working/dataset_yolo\", ignore_errors=True)\n\n# Clean ultralytics cache (pretrained weights)\nshutil.rmtree(\"/root/.cache/ultralytics\", ignore_errors=True)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T19:15:23.798665Z","iopub.execute_input":"2025-08-22T19:15:23.799276Z","iopub.status.idle":"2025-08-22T19:15:24.901094Z","shell.execute_reply.started":"2025-08-22T19:15:23.799253Z","shell.execute_reply":"2025-08-22T19:15:24.900127Z"}},"outputs":[],"execution_count":23},{"cell_type":"code","source":"from ultralytics import YOLO\nmodel = YOLO(\"yolov8n.pt\")   # much smaller (6 MB), fits Kaggle storage easily\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T19:15:53.414064Z","iopub.execute_input":"2025-08-22T19:15:53.414410Z","iopub.status.idle":"2025-08-22T19:15:53.903528Z","shell.execute_reply.started":"2025-08-22T19:15:53.414385Z","shell.execute_reply":"2025-08-22T19:15:53.902691Z"}},"outputs":[{"name":"stderr","text":"Downloading https://github.com/ultralytics/assets/releases/download/v8.3.0/yolov8n.pt to 'yolov8n.pt': 100%|██████████| 6.25M/6.25M [00:00<00:00, 69.4MB/s]\n","output_type":"stream"}],"execution_count":24},{"cell_type":"code","source":"results = model.train(\n    data=\"/kaggle/working/c2a_data.yaml\",\n    epochs=20,        # try smaller first (20 instead of 50)\n    imgsz=640,\n    batch=8,          # smaller batch uses less GPU + saves space\n    device=0,\n    project=\"/kaggle/working/runs\",\n    name=\"c2a_train\",\n    save=True,\n    save_period=0,\n    val=True,\n    verbose=True\n)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-22T19:16:11.069240Z","iopub.execute_input":"2025-08-22T19:16:11.069570Z","execution_failed":"2025-08-22T20:25:16.166Z"}},"outputs":[{"name":"stdout","text":"Ultralytics 8.3.184 🚀 Python-3.11.13 torch-2.6.0+cu124 CUDA:0 (Tesla T4, 15095MiB)\n\u001b[34m\u001b[1mengine/trainer: \u001b[0magnostic_nms=False, amp=True, augment=False, auto_augment=randaugment, batch=8, bgr=0.0, box=7.5, cache=False, cfg=None, classes=None, close_mosaic=10, cls=0.5, conf=None, copy_paste=0.0, copy_paste_mode=flip, cos_lr=False, cutmix=0.0, data=/kaggle/working/c2a_data.yaml, degrees=0.0, deterministic=True, device=0, dfl=1.5, dnn=False, dropout=0.0, dynamic=False, embed=None, epochs=20, erasing=0.4, exist_ok=False, fliplr=0.5, flipud=0.0, format=torchscript, fraction=1.0, freeze=None, half=False, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, imgsz=640, int8=False, iou=0.7, keras=False, kobj=1.0, line_width=None, lr0=0.01, lrf=0.01, mask_ratio=4, max_det=300, mixup=0.0, mode=train, model=yolov8n.pt, momentum=0.937, mosaic=1.0, multi_scale=False, name=c2a_train, nbs=64, nms=False, opset=None, optimize=False, optimizer=auto, overlap_mask=True, patience=100, perspective=0.0, plots=True, pose=12.0, pretrained=True, profile=False, project=/kaggle/working/runs, rect=False, resume=False, retina_masks=False, save=True, save_conf=False, save_crop=False, save_dir=/kaggle/working/runs/c2a_train, save_frames=False, save_json=False, save_period=0, save_txt=False, scale=0.5, seed=0, shear=0.0, show=False, show_boxes=True, show_conf=True, show_labels=True, simplify=True, single_cls=False, source=None, split=val, stream_buffer=False, task=detect, time=None, tracker=botsort.yaml, translate=0.1, val=True, verbose=True, vid_stride=1, visualize=False, warmup_bias_lr=0.1, warmup_epochs=3.0, warmup_momentum=0.8, weight_decay=0.0005, workers=8, workspace=None\nOverriding model.yaml nc=80 with nc=4\n\n                   from  n    params  module                                       arguments                     \n  0                  -1  1       464  ultralytics.nn.modules.conv.Conv             [3, 16, 3, 2]                 \n  1                  -1  1      4672  ultralytics.nn.modules.conv.Conv             [16, 32, 3, 2]                \n  2                  -1  1      7360  ultralytics.nn.modules.block.C2f             [32, 32, 1, True]             \n  3                  -1  1     18560  ultralytics.nn.modules.conv.Conv             [32, 64, 3, 2]                \n  4                  -1  2     49664  ultralytics.nn.modules.block.C2f             [64, 64, 2, True]             \n  5                  -1  1     73984  ultralytics.nn.modules.conv.Conv             [64, 128, 3, 2]               \n  6                  -1  2    197632  ultralytics.nn.modules.block.C2f             [128, 128, 2, True]           \n  7                  -1  1    295424  ultralytics.nn.modules.conv.Conv             [128, 256, 3, 2]              \n  8                  -1  1    460288  ultralytics.nn.modules.block.C2f             [256, 256, 1, True]           \n  9                  -1  1    164608  ultralytics.nn.modules.block.SPPF            [256, 256, 5]                 \n 10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 11             [-1, 6]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 12                  -1  1    148224  ultralytics.nn.modules.block.C2f             [384, 128, 1]                 \n 13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 14             [-1, 4]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 15                  -1  1     37248  ultralytics.nn.modules.block.C2f             [192, 64, 1]                  \n 16                  -1  1     36992  ultralytics.nn.modules.conv.Conv             [64, 64, 3, 2]                \n 17            [-1, 12]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 18                  -1  1    123648  ultralytics.nn.modules.block.C2f             [192, 128, 1]                 \n 19                  -1  1    147712  ultralytics.nn.modules.conv.Conv             [128, 128, 3, 2]              \n 20             [-1, 9]  1         0  ultralytics.nn.modules.conv.Concat           [1]                           \n 21                  -1  1    493056  ultralytics.nn.modules.block.C2f             [384, 256, 1]                 \n 22        [15, 18, 21]  1    752092  ultralytics.nn.modules.head.Detect           [4, [64, 128, 256]]           \nModel summary: 129 layers, 3,011,628 parameters, 3,011,612 gradients, 8.2 GFLOPs\n\nTransferred 319/355 items from pretrained weights\nFreezing layer 'model.22.dfl.conv.weight'\n\u001b[34m\u001b[1mAMP: \u001b[0mrunning Automatic Mixed Precision (AMP) checks...\n\u001b[34m\u001b[1mAMP: \u001b[0mchecks passed ✅\n\u001b[34m\u001b[1mtrain: \u001b[0mFast image access ✅ (ping: 0.0±0.0 ms, read: 3207.7±930.5 MB/s, size: 3085.1 KB)\n","output_type":"stream"},{"name":"stderr","text":"\u001b[34m\u001b[1mtrain: \u001b[0mScanning /kaggle/working/c2a_preprocessed/train/labels.cache... 6129 images, 0 backgrounds, 0 corrupt: 100%|██████████| 6129/6129 [00:00<?, ?it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[34m\u001b[1mtrain: \u001b[0m/kaggle/working/c2a_preprocessed/train/images/flood_image0407_3.png: 1 duplicate labels removed\n\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01, method='weighted_average', num_output_channels=3), CLAHE(p=0.01, clip_limit=(1.0, 4.0), tile_grid_size=(8, 8))\n","output_type":"stream"},{"name":"stderr","text":"\n","output_type":"stream"},{"name":"stdout","text":"\u001b[34m\u001b[1mval: \u001b[0mFast image access ✅ (ping: 0.0±0.0 ms, read: 392.1±200.0 MB/s, size: 321.9 KB)\n","output_type":"stream"},{"name":"stderr","text":"\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/working/c2a_preprocessed/val/labels.cache... 2043 images, 0 backgrounds, 0 corrupt: 100%|██████████| 2043/2043 [00:00<?, ?it/s]\n","output_type":"stream"},{"name":"stdout","text":"Plotting labels to /kaggle/working/runs/c2a_train/labels.jpg... \n\u001b[34m\u001b[1moptimizer:\u001b[0m 'optimizer=auto' found, ignoring 'lr0=0.01' and 'momentum=0.937' and determining best 'optimizer', 'lr0' and 'momentum' automatically... \n\u001b[34m\u001b[1moptimizer:\u001b[0m AdamW(lr=0.00125, momentum=0.9) with parameter groups 57 weight(decay=0.0), 64 weight(decay=0.0005), 63 bias(decay=0.0)\nImage sizes 640 train, 640 val\nUsing 4 dataloader workers\nLogging results to \u001b[1m/kaggle/working/runs/c2a_train\u001b[0m\nStarting training for 20 epochs...\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"       1/20      5.46G      1.696      1.495      1.077        138        640: 100%|██████████| 767/767 [01:42<00:00,  7.52it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:24<00:00,  5.28it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123      0.706      0.565      0.601      0.322\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"       2/20      5.46G      1.542      1.062      1.033        102        640: 100%|██████████| 767/767 [01:32<00:00,  8.33it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:19<00:00,  6.45it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123      0.741      0.595      0.636      0.351\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"       3/20      5.46G      1.488     0.9988       1.02         25        640: 100%|██████████| 767/767 [01:31<00:00,  8.34it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:19<00:00,  6.53it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123       0.74      0.603      0.652      0.371\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"       4/20      5.46G      1.462     0.9606      1.016         36        640: 100%|██████████| 767/767 [01:31<00:00,  8.38it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:19<00:00,  6.59it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123      0.764      0.612      0.666      0.379\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"       5/20      5.46G      1.431     0.9339      1.005         31        640: 100%|██████████| 767/767 [01:31<00:00,  8.38it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:19<00:00,  6.51it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123      0.768      0.617      0.674      0.391\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"       6/20      5.46G      1.416     0.9153          1         27        640: 100%|██████████| 767/767 [01:31<00:00,  8.42it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:19<00:00,  6.59it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123      0.777      0.629      0.686      0.398\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"       7/20      5.46G      1.394     0.8994     0.9956         39        640: 100%|██████████| 767/767 [01:34<00:00,  8.13it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:20<00:00,  6.40it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123      0.774      0.632       0.69      0.404\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"       8/20      5.46G      1.367      0.873     0.9915         43        640: 100%|██████████| 767/767 [01:32<00:00,  8.26it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:20<00:00,  6.32it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123      0.778      0.643      0.698       0.41\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"       9/20      5.46G      1.359     0.8672     0.9877         49        640: 100%|██████████| 767/767 [01:32<00:00,  8.31it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:19<00:00,  6.50it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123      0.793      0.646      0.703      0.416\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      10/20      5.46G      1.346     0.8541     0.9839         28        640: 100%|██████████| 767/767 [01:32<00:00,  8.26it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:19<00:00,  6.51it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123      0.794      0.647      0.704      0.419\nClosing dataloader mosaic\n\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01, method='weighted_average', num_output_channels=3), CLAHE(p=0.01, clip_limit=(1.0, 4.0), tile_grid_size=(8, 8))\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      11/20      5.46G      1.294     0.8422     0.9874         23        640: 100%|██████████| 767/767 [01:30<00:00,  8.51it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:19<00:00,  6.40it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123       0.79      0.644      0.703      0.418\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      12/20      5.46G      1.279     0.8252     0.9842         53        640: 100%|██████████| 767/767 [01:28<00:00,  8.67it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:19<00:00,  6.55it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123      0.795      0.648      0.711      0.426\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      13/20      5.46G      1.265     0.8131       0.98         39        640: 100%|██████████| 767/767 [01:28<00:00,  8.70it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:19<00:00,  6.48it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123      0.791      0.652       0.71      0.426\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      14/20      5.46G      1.256     0.8076     0.9765         37        640: 100%|██████████| 767/767 [01:28<00:00,  8.69it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:19<00:00,  6.60it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123      0.798      0.653      0.714      0.433\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      15/20      5.46G      1.246     0.7962     0.9753         20        640: 100%|██████████| 767/767 [01:28<00:00,  8.63it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|██████████| 128/128 [00:19<00:00,  6.48it/s]\n","output_type":"stream"},{"name":"stdout","text":"                   all       2043      72123        0.8      0.658      0.718      0.435\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n","output_type":"stream"},{"name":"stderr","text":"      16/20      5.46G      1.243     0.7944     0.9753        226        640:  20%|██        | 155/767 [00:17<01:29,  6.84it/s]","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}